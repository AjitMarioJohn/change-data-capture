<?xml version="1.0" encoding="UTF-8"?>

<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
         http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.1.xsd">

    <property name="now" value="now()" dbms="mysql,h2"/>
    <property name="now" value="current_timestamp" dbms="postgresql"/>
    <property name="now" value="sysdate" dbms="oracle"/>
    <property name="now" value="getdate()" dbms="mssql"/>

    <changeSet id="1" author="liquibase">
        <preConditions onFail="MARK_RAN">
            <not>
                <tableExists tableName="wikimedia_events" />
            </not>
        </preConditions>
        <createTable tableName="wikimedia_events">
            <column name="id" type="BIGINT" autoIncrement="true">
                <constraints primaryKey="true" primaryKeyName="pk_wikimedia_events"/>
            </column>
            <column name="title" type="text">
                <constraints nullable="false"/>
            </column>
            <column name="title_url" type="TEXT">
                <constraints nullable="false"/>
            </column>
            <column name="event_time" type="varchar(255)">
                <constraints nullable="false"/>
            </column>
            <column name="user_name" type="varchar(255)">
                <constraints nullable="false"/>
            </column>
            <column name="created_at" type="TIMESTAMP"  defaultValueDate="${now}"/>
            <column name="updated_at" type="TIMESTAMP"  defaultValueDate="${now}"/>
        </createTable>
        <rollback>
            <dropTable tableName="wikimedia_events"/>
        </rollback>
    </changeSet>

    <changeSet id="2" author="liquibase">
        <preConditions onFail="MARK_RAN">
            <not>
                <tableExists tableName="wikimedia_events_audit" />
            </not>
        </preConditions>
        <createTable tableName="wikimedia_events_audit">
            <column name="id" type="bigint" />
            <column name="title" type="TEXT"/>
            <column name="title_url" type="TEXT"/>
            <column name="event_time" type="varchar(255)"/>
            <column name="user_name" type="varchar(255)"/>
            <column name="created_at" type="TIMESTAMP"/>
            <column name="updated_at" type="TIMESTAMP"/>
            <column name="operation" type="varchar(20)"/>
            <column name="partition_key" type="varchar(50)"/>
            <column name="retry_counts" type="bigint" defaultValue="0"/>
        </createTable>
        <rollback>
            <dropTable tableName="wikimedia_events_audit"/>
        </rollback>
    </changeSet>

    <changeSet id="3" author="liquibase">
        <preConditions onFail="MARK_RAN">
            <not>
                <tableExists tableName="scheduler_instances" />
            </not>
        </preConditions>
        <createTable tableName="scheduler_instances">
            <column name="id" type="bigint" autoIncrement="true">
                <constraints primaryKey="true"  primaryKeyName="pk_scheduler_instances"/>
            </column>
            <column name="instance_id" type="varchar(50)">
                <constraints nullable="false"/>
            </column>
            <column name="retry_attempts" type="bigint">
                <constraints nullable="false"/>
            </column>
            <column name="created_at" type="TIMESTAMP">
                <constraints nullable="false" />
            </column>
            <column name="updated_at" type="TIMESTAMP">
                <constraints nullable="false" />
            </column>
        </createTable>
        <rollback>
            <dropTable tableName="scheduler_instances"/>
        </rollback>
    </changeSet>

<!--    <changeSet id="4"  author="liquibase">-->
<!--        <preConditions onFail="MARK_RAN">-->
<!--            <sqlCheck expectedResult="0">-->
<!--                SELECT COUNT(1) FROM pg_trigger where tgname = 'wikimedia_events_audit_trigger';-->
<!--            </sqlCheck>-->
<!--        </preConditions>-->
<!--        <sqlFile path="db/changelog/audit_trigger.sql" />-->
<!--        <rollback>-->
<!--            DROP TRIGGER wikimedia_events_audit_trigger ON wikimedia_events;-->
<!--        </rollback>-->
<!--    </changeSet>-->

</databaseChangeLog>
